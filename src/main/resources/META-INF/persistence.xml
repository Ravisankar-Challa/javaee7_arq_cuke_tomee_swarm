<?xml version="1.0" encoding="UTF-8"?>
<persistence xmlns="http://xmlns.jcp.org/xml/ns/persistence"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence
             http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd"
             version="2.1">
   <persistence-unit name="test">
      <jta-data-source>java:comp/DefaultDataSource</jta-data-source>
      <properties>
      	<property name="javax.persistence.schema-generation.database.action" value="drop-and-create"/>
      	<property name="javax.persistence.schema-generation.create-source" value="metadata"/>
      	<property name="javax.persistence.schema-generation.drop-source" value="metadata"/>
      	 <!-- <property name="hibernate.hbm2ddl.auto" value="create-drop" /> -->
		  <!-- does not create foreign keys, creates schema and deletes content of a database
		       (deleteTableContents - foreign keys are created twice???), use dropDB instead -->
		  <property name="openjpa.jdbc.SynchronizeMappings" value="buildSchema(foreignKeys=true,schemaAction='dropDB,add')"/>
		  <!--Resolves the problem with foreign key integrity - joined entities are persisted sometimes in wrong order??? (verify it)-->
		  <property name="openjpa.jdbc.SchemaFactory" value="native(foreignKeys=true)" />
		  <!--Create foreign keys-->
		  <property name="openjpa.jdbc.MappingDefaults" value="ForeignKeyDeleteAction=restrict, JoinForeignKeyDeleteAction=restrict"/>
		  <property name="openjpa.Log" value="DefaultLevel=INFO,SQL=TRACE" />
      </properties>
   </persistence-unit>
</persistence>
